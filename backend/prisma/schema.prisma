generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  admin     Boolean
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Classification {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @unique
  active                   Boolean                    @default(true)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  ClassificationOnProducts ClassificationOnProducts[]
}

model Products {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @unique
  storeStock               Int
  warehouseStock           Int
  retailPrice              Float
  wholesalePrice           Float
  wholesaleAmount          Float
  lowstockAlert            Int
  description              String
  brand                    String
  active                   Boolean                    @default(true)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  ClassificationOnProducts ClassificationOnProducts[]
  ProductLogs              ProductLogs[]
}

model ProductLogs {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Products @relation(fields: [productId], references: [id])

  previousStoreStock     Int
  previousWarehouseStock Int
  previousRetailPrice    Float
  previousWholesalePrice Float

  updatedStoreStock     Int
  updatedWarehouseStock Int
  updatedRetailPrice    Float
  updatedWholesalePrice Float
  date                  DateTime @default(now())

  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ClassificationOnProducts {
  id               Int            @id @default(autoincrement())
  productId        Int
  classificationId Int
  active           Boolean        @default(true)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  classification   Classification @relation(fields: [classificationId], references: [id])
  product          Products       @relation(fields: [productId], references: [id])
}

model Customers {
  id           Int      @id @default(autoincrement())
  firstName    String
  lastName     String
  sex          Sex
  contactNum   String
  emailAddress String
  country      String
  province     String
  municipality String
  street       String
  zipCode      Int
  active       Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Suppliers {
  id           Int      @id @default(autoincrement())
  contactName  String
  businessName String
  contactNum   String
  emailAddress String
  country      String
  province     String
  municipality String
  street       String
  zipCode      Int
  active       Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum Sex {
  MALE
  FEMALE
}

enum UserType {
  ADMIN
  VIEW
}

// enum Location {
//   WAREHOUSE
//   STORE
//   WAREHOUSE_STORE
// }
